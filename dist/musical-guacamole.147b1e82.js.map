{"mappings":"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","sources":["<anon>","src/index.js","node_modules/emailjs-com/es/index.js","node_modules/emailjs-com/es/methods/init/init.js","node_modules/emailjs-com/es/store/store.js","node_modules/emailjs-com/es/methods/send/send.js","node_modules/emailjs-com/es/utils/validateParams.js","node_modules/emailjs-com/es/api/sendPost.js","node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","node_modules/emailjs-com/es/methods/sendForm/sendForm.js"],"sourcesContent":["const $c5dfff60616fad5c$export$6f57813fe9f31bf9 = {\n    _origin: 'https://api.emailjs.com'\n};\n\n\nconst $6e3ddb730ef06045$export$2cd8252107eb640b = (userID, origin = 'https://api.emailjs.com')=>{\n    (0, $c5dfff60616fad5c$export$6f57813fe9f31bf9)._userID = userID;\n    (0, $c5dfff60616fad5c$export$6f57813fe9f31bf9)._origin = origin;\n};\n\n\n\nconst $7a99687c8afb6df5$export$1f3bf48e9edf7d72 = (userID, serviceID, templateID)=>{\n    if (!userID) throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    if (!serviceID) throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    if (!templateID) throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    return true;\n};\n\n\nclass $1d6ed9c9db1b49bc$export$29b488039e3d4c2d {\n    constructor(httpResponse){\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n\n\n\nconst $04944542c58197d3$export$4a68059d3a005c64 = (url, data, headers = {})=>{\n    return new Promise((resolve, reject)=>{\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target: target })=>{\n            const responseStatus = new (0, $1d6ed9c9db1b49bc$export$29b488039e3d4c2d)(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') resolve(responseStatus);\n            else reject(responseStatus);\n        });\n        xhr.addEventListener('error', ({ target: target })=>{\n            reject(new (0, $1d6ed9c9db1b49bc$export$29b488039e3d4c2d)(target));\n        });\n        xhr.open('POST', (0, $c5dfff60616fad5c$export$6f57813fe9f31bf9)._origin + url, true);\n        Object.keys(headers).forEach((key)=>{\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n\n\nconst $fbb1269b2128f173$export$89db4734f6c919c4 = (serviceID, templateID, templatePrams, userID)=>{\n    const uID = userID || (0, $c5dfff60616fad5c$export$6f57813fe9f31bf9)._userID;\n    (0, $7a99687c8afb6df5$export$1f3bf48e9edf7d72)(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams\n    };\n    return (0, $04944542c58197d3$export$4a68059d3a005c64)('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json'\n    });\n};\n\n\n\n\n\nconst $3e0fb221aa588616$var$findHTMLForm = (form)=>{\n    let currentForm;\n    if (typeof form === 'string') currentForm = document.querySelector(form);\n    else currentForm = form;\n    if (!currentForm || currentForm.nodeName !== 'FORM') throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    return currentForm;\n};\nconst $3e0fb221aa588616$export$c13a0f9407ffb567 = (serviceID, templateID, form, userID)=>{\n    const uID = userID || (0, $c5dfff60616fad5c$export$6f57813fe9f31bf9)._userID;\n    const currentForm = $3e0fb221aa588616$var$findHTMLForm(form);\n    (0, $7a99687c8afb6df5$export$1f3bf48e9edf7d72)(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return (0, $04944542c58197d3$export$4a68059d3a005c64)('/api/v1.0/email/send-form', formData);\n};\n\n\nvar $c69f1e385438e576$export$2e2bcd8739ae039 = {\n    init: $6e3ddb730ef06045$export$2cd8252107eb640b,\n    send: $fbb1269b2128f173$export$89db4734f6c919c4,\n    sendForm: $3e0fb221aa588616$export$c13a0f9407ffb567\n};\n\n\n(0, $c69f1e385438e576$export$2e2bcd8739ae039).init(\"ZT5dOwgz9dhOwyxD9\");\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const modal = document.getElementById(\"contactModal\");\n    const openBtn = document.querySelector(\".about-us-btn\");\n    const closeBtn = document.querySelector(\".modal-close\");\n    const form = modal.querySelector(\"form\");\n    let messageContainer = document.createElement(\"div\");\n    messageContainer.style.marginTop = \"10px\";\n    form.prepend(messageContainer);\n    function showMessage(text, type = \"success\") {\n        messageContainer.textContent = text;\n        messageContainer.style.color = type === \"success\" ? \"#ffd700\" : \"#ff4c4c\";\n        messageContainer.style.fontWeight = \"bold\";\n    }\n    function clearMessages() {\n        messageContainer.textContent = \"\";\n    }\n    openBtn.addEventListener(\"click\", ()=>{\n        modal.style.display = \"flex\";\n        clearMessages();\n    });\n    closeBtn.addEventListener(\"click\", ()=>{\n        modal.style.display = \"none\";\n        clearMessages();\n    });\n    window.addEventListener(\"click\", (e)=>{\n        if (e.target === modal) modal.style.display = \"none\";\n    });\n    form.addEventListener(\"submit\", (e)=>{\n        e.preventDefault();\n        const name = form.querySelector(\"input[name='name']\");\n        const email = form.querySelector(\"input[name='email']\");\n        const message = form.querySelector(\"textarea[name='message']\");\n        let hasError = false;\n        [\n            name,\n            email,\n            message\n        ].forEach((f)=>f.style.border = \"none\");\n        clearMessages();\n        if (!name.value.trim()) {\n            name.style.border = \"2px solid red\";\n            hasError = true;\n        }\n        if (!/^\\S+@\\S+\\.\\S+$/.test(email.value)) {\n            email.style.border = \"2px solid red\";\n            hasError = true;\n        }\n        if (!message.value.trim()) {\n            message.style.border = \"2px solid red\";\n            hasError = true;\n        }\n        if (hasError) {\n            showMessage(\"\\u274C \\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044F \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E.\", \"error\");\n            return;\n        }\n        (0, $c69f1e385438e576$export$2e2bcd8739ae039).send(\"service_7elxk0c\", \"template_zuwfv2p\", {\n            name: name.value,\n            email: email.value,\n            message: message.value\n        }).then(()=>{\n            showMessage(\"\\u2705 \\u0412\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u043E!\", \"success\");\n            form.reset();\n        }).catch(()=>{\n            showMessage(\"\\u274C \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0435. \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u043F\\u043E\\u0437\\u0436\\u0435.\", \"error\");\n        });\n    });\n});\n\n\n//# sourceMappingURL=musical-guacamole.147b1e82.js.map\n","import emailjs from 'emailjs-com';\r\n\r\nemailjs.init(\"ZT5dOwgz9dhOwyxD9\");\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const modal = document.getElementById(\"contactModal\");\r\n  const openBtn = document.querySelector(\".about-us-btn\");\r\n  const closeBtn = document.querySelector(\".modal-close\");\r\n  const form = modal.querySelector(\"form\");\r\n\r\n  let messageContainer = document.createElement(\"div\");\r\n  messageContainer.style.marginTop = \"10px\";\r\n  form.prepend(messageContainer);\r\n\r\n  function showMessage(text, type = \"success\") {\r\n    messageContainer.textContent = text;\r\n    messageContainer.style.color = type === \"success\" ? \"#ffd700\" : \"#ff4c4c\";\r\n    messageContainer.style.fontWeight = \"bold\";\r\n  }\r\n\r\n  function clearMessages() {\r\n    messageContainer.textContent = \"\";\r\n  }\r\n\r\n  openBtn.addEventListener(\"click\", () => {\r\n    modal.style.display = \"flex\";\r\n    clearMessages();\r\n  });\r\n\r\n  closeBtn.addEventListener(\"click\", () => {\r\n    modal.style.display = \"none\";\r\n    clearMessages();\r\n  });\r\n\r\n  window.addEventListener(\"click\", (e) => {\r\n    if (e.target === modal) modal.style.display = \"none\";\r\n  });\r\n\r\n  form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const name = form.querySelector(\"input[name='name']\");\r\n    const email = form.querySelector(\"input[name='email']\");\r\n    const message = form.querySelector(\"textarea[name='message']\");\r\n    let hasError = false;\r\n\r\n    [name,email,message].forEach(f => f.style.border=\"none\");\r\n    clearMessages();\r\n\r\n    if (!name.value.trim()) { name.style.border=\"2px solid red\"; hasError=true; }\r\n    if (!/^\\S+@\\S+\\.\\S+$/.test(email.value)) { email.style.border=\"2px solid red\"; hasError=true; }\r\n    if (!message.value.trim()) { message.style.border=\"2px solid red\"; hasError=true; }\r\n\r\n    if (hasError) {\r\n      showMessage(\"❌ Пожалуйста, заполните все поля правильно.\", \"error\");\r\n      return;\r\n    }\r\n\r\n    emailjs.send(\"service_7elxk0c\",\"template_zuwfv2p\",{\r\n      name:name.value,\r\n      email:email.value,\r\n      message:message.value\r\n    })\r\n    .then(()=>{ showMessage(\"✅ Ваше сообщение отправлено!\",\"success\"); form.reset(); })\r\n    .catch(()=>{ showMessage(\"❌ Ошибка при отправке. Попробуйте позже.\",\"error\"); });\r\n  });\r\n});\r\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["$c5dfff60616fad5c$export$6f57813fe9f31bf9","_origin","$1d6ed9c9db1b49bc$export$29b488039e3d4c2d","httpResponse","status","text","responseText","userID","origin","_userID","document","addEventListener","modal","getElementById","openBtn","querySelector","closeBtn","form","messageContainer","createElement","showMessage","type","textContent","style","color","fontWeight","clearMessages","marginTop","prepend","display","window","e","target","preventDefault","name","email","message","hasError","forEach","f","border","value","trim","test","serviceID","templateID","templatePrams","uID","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","responseStatus","open","Object","keys","key","setRequestHeader","send","JSON","stringify","lib_version","user_id","service_id","template_id","template_params","then","reset","catch"],"version":3,"file":"musical-guacamole.147b1e82.js.map"}